name: actions
on:
  push:
  workflow_dispatch:
jobs:
  alpine:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        QEMU_VER: [v7.2.0-1]
        DOCKER_REPO: [docker.io/multiarch/alpine]
        GHCR_REPO: [ghcr.io/asymworks/multiarch-alpine]
        LATEST_VERSION: [v3.20]
        VERSION: [v3.11, v3.12, v3.13, v3.14, v3.15, v3.16, v3.17, v3.18, v3.19, v3.20, edge]
        TAG_ARCH: [x86, x86_64, i386, amd64, armhf, aarch64, arm64, armv7, ppc64le, s390x, riscv64]
        include:
          - {ARCH: x86,      QEMU_ARCH: i386,      TAG_ARCH: x86}
          - {ARCH: x86_64,   QEMU_ARCH: x86_64,    TAG_ARCH: x86_64}
          - {ARCH: x86,      QEMU_ARCH: i386,      TAG_ARCH: i386}
          - {ARCH: x86_64,   QEMU_ARCH: x86_64,    TAG_ARCH: amd64}
          - {ARCH: armhf,    QEMU_ARCH: arm,       TAG_ARCH: armhf}
          - {ARCH: aarch64,  QEMU_ARCH: aarch64,   TAG_ARCH: aarch64}
          - {ARCH: aarch64,  QEMU_ARCH: aarch64,   TAG_ARCH: arm64}
          - {ARCH: armv7,    QEMU_ARCH: arm,       TAG_ARCH: armv7}
          - {ARCH: ppc64le,  QEMU_ARCH: ppc64le,   TAG_ARCH: ppc64le}
          - {ARCH: s390x,    QEMU_ARCH: s390x,     TAG_ARCH: s390x}
          - {ARCH: riscv64,  QEMU_ARCH: riscv64,   TAG_ARCH: riscv64}
        exclude:
          - {TAG_ARCH: riscv64, VERSION: v3.11}
          - {TAG_ARCH: riscv64, VERSION: v3.12}
          - {TAG_ARCH: riscv64, VERSION: v3.13}
          - {TAG_ARCH: riscv64, VERSION: v3.14}
          - {TAG_ARCH: riscv64, VERSION: v3.15}
          - {TAG_ARCH: riscv64, VERSION: v3.16}
          - {TAG_ARCH: riscv64, VERSION: v3.17}
          - {TAG_ARCH: riscv64, VERSION: v3.18}
          - {TAG_ARCH: riscv64, VERSION: v3.19}
    steps:
      - uses: actions/checkout@v2
      - name: Build
        run: |
          sudo apt-get update && sudo apt-get install -y --no-install-recommends qemu-user-static
          sudo ./update.sh -a ${{ matrix.ARCH }} -v ${{ matrix.VERSION }} -q ${{ matrix.QEMU_ARCH }} -u ${{ matrix.QEMU_VER }} -d ${{ matrix.DOCKER_REPO }} -g ${{ matrix.GHCR_REPO }} -t ${{ matrix.TAG_ARCH }} -l ${{ matrix.LATEST_VERSION }}
      
      - name: Log in to Docker Hub
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}
      
      - name: Log in to the Container registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: |
            asymworks/multiarch-alpine
            ghcr.io/${{ github.repository }}

      - name: Push Docker images
        if: github.ref == 'refs/heads/master'
        run: |
          docker push -a ${{ matrix.DOCKER_REPO }}
          docker push -a ${{ matrix.GHCR_REPO }}
